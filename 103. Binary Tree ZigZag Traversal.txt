/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        
        vector<vector<int>> Output;
        bool flag = true;
        
        if(root == nullptr) return Output;
        
        queue<TreeNode*> Queue;
        Queue.push(root);
        
        while(!Queue.empty()) 
        {
            int n = Queue.size();
            vector<int> list;
            
            for(int i = 0; i < n; i++)
            {
                TreeNode* node = Queue.front(); Queue.pop();
                
                if(node -> left != nullptr)
                    Queue.push(node -> left);
                
                if(node -> right != nullptr)
                    Queue.push(node -> right);
                
                list.push_back(node -> val);
            }
            
            if(flag) {
                Output.push_back(list);
                flag = false;
            }
            else {
                reverse(list.begin(), list.end());
                Output.push_back(list);
                flag = true;
            }
        }
        
        return Output;
    }
};